# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool: "default"

variables:
- name: CloudInitContent

steps:

- task: AzureResourceManagerTemplateDeployment@3 #Validation du build de la key vault
  displayName: 'Validate ARM Template Key-vault'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(1)(564b93c0-8739-4bbe-8f21-bfa2192d4a08)'
    subscriptionId: '564b93c0-8739-4bbe-8f21-bfa2192d4a08'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'key-vault'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\template-key-vault.json'
    csmParametersFile: '$(Build.SourcesDirectory)\parameters-key-vault.json'
    overrideParameters: '-vaults_AdminMDP_name $(nomKey)'
    deploymentMode: 'Validation'

- task: AzureResourceManagerTemplateDeployment@3 #Bulid de la key vault
  displayName: 'Deploy ARM Template Key-Vault'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(1)(564b93c0-8739-4bbe-8f21-bfa2192d4a08)'
    subscriptionId: '564b93c0-8739-4bbe-8f21-bfa2192d4a08'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'key-vault'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\template-key-vault.json'
    csmParametersFile: '$(Build.SourcesDirectory)\parameters-key-vault.json'
    overrideParameters: '-vaults_AdminMDP_name $(nomKey)'
    deploymentMode: 'Incremental'
    
- task: PowerShell@2 #Récupération du fichier cloud Init pour la mettre dans une variable local
  displayName: 'Cloud Init'
  inputs:
    targetType: 'inline'
    script: |
      $CloudContent = Get-Content -Path .\Cloud-init.txt -Raw
      echo $(CloudInitContent)
      Write-Host $CloudContent
      $encodedContent = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($CloudContent))
      Write-Host $encodedContent
      Write-Host "##vso[task.setvariable variable=CloudInitContent;]$encodedContent"

- script: |
    echo $(CloudInitContent)

- task: AzureKeyVault@2 #Récupération du mot de passe admin de la key vault pour la mettre dans une variable local
  displayName: 'Azure key-vault password'
  inputs:
    azureSubscription: 'Azure subscription 1(1)(564b93c0-8739-4bbe-8f21-bfa2192d4a08)'
    KeyVaultName: '$(nomKey)'
    SecretsFilter: 'MDP'
    RunAsPreJob: false

- script: | #Met le mots de passe dans un variable local
      echo New value $(AzureKey.MDP)

- task: AzureResourceManagerTemplateDeployment@3 #Validation du build de la VM scale sets
  displayName: 'Validate ARM Template VM'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(564b93c0-8739-4bbe-8f21-bfa2192d4a08)'
    subscriptionId: '564b93c0-8739-4bbe-8f21-bfa2192d4a08'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'projet-azure'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)\azuredeploy.parameters.json'
    overrideParameters: '-customData $(CloudInitContent) -adminPassword $(MDP)'
    deploymentMode: 'Validation'

- task: AzureResourceManagerTemplateDeployment@3 #build de la VM scale sets
  displayName: 'Deploy ARM Template VM'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(564b93c0-8739-4bbe-8f21-bfa2192d4a08)'
    subscriptionId: '564b93c0-8739-4bbe-8f21-bfa2192d4a08'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'projet-azure'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)\azuredeploy.parameters.json'
    overrideParameters: '-customData $(CloudInitContent) -adminPassword $(MDP)'
    deploymentMode: 'Incremental'